[tool:pytest]
# Pytest configuration for the LAM Project Portfolio Management System

minversion = 7.4.0
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --asyncio-mode=auto

testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Async test configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests between components
    e2e: End-to-end tests across the full system
    api: API endpoint tests
    database: Database integration tests
    ai: AI/ML functionality tests
    slow: Slow running tests
    auth: Authentication and authorization tests
    performance: Performance benchmark tests
    smoke: Basic smoke tests for system health
    external: Tests requiring external services (Ollama, Redis)

# Filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning
    # SQLAlchemy 2.0 warnings
    ignore:.*declarative_base.*:sqlalchemy.exc.MovedIn20Warning
    # Pydantic warnings
    ignore:.*class-based.*config.*:pydantic.warnings.PydanticDeprecatedSince20

# Test discovery
norecursedirs = 
    .git
    .pytest_cache
    __pycache__
    htmlcov
    build
    dist
    venv
    .venv
    node_modules

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
