"""Add baseline and versioning tables

Revision ID: 44163d84b8ce
Revises: c048cb6a6d45
Create Date: 2025-09-01 14:28:37.232165

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '44163d84b8ce'
down_revision: Union[str, Sequence[str], None] = 'c048cb6a6d45'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create tables without enum types first (they will be created automatically)
    op.create_table('project_baselines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),  # Use string instead of enum
    sa.Column('baseline_data', sa.JSON(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('approved_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_baselines_id'), 'project_baselines', ['id'], unique=False)
    
    op.create_table('baseline_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('baseline_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),  # Use string instead of enum
    sa.Column('priority', sa.String(length=20), nullable=False),  # Use string instead of enum
    sa.Column('estimated_hours', sa.Float(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('dependencies', sa.Text(), nullable=True),
    sa.Column('assigned_to_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['baseline_id'], ['project_baselines.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_baseline_tasks_id'), 'baseline_tasks', ['id'], unique=False)
    
    op.create_table('project_variances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('baseline_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('variance_type', sa.String(length=20), nullable=False),  # Use string instead of enum
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('baseline_value', sa.Float(), nullable=True),
    sa.Column('current_value', sa.Float(), nullable=True),
    sa.Column('variance_amount', sa.Float(), nullable=True),
    sa.Column('variance_percentage', sa.Float(), nullable=True),
    sa.Column('impact_level', sa.String(length=20), nullable=True),
    sa.Column('mitigation_plan', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['baseline_id'], ['project_baselines.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_variances_id'), 'project_variances', ['id'], unique=False)
    
    # Add columns to existing tables
    op.add_column('projects', sa.Column('current_baseline_id', sa.Integer(), nullable=True))
    op.add_column('tasks', sa.Column('baseline_task_id', sa.Integer(), nullable=True))
    
    # Create foreign keys
    op.create_foreign_key('fk_projects_current_baseline', 'projects', 'project_baselines', ['current_baseline_id'], ['id'])
    op.create_foreign_key('fk_tasks_baseline_task', 'tasks', 'baseline_tasks', ['baseline_task_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_tasks_baseline_task', 'tasks', type_='foreignkey')
    op.drop_column('tasks', 'baseline_task_id')
    op.drop_constraint('fk_projects_current_baseline', 'projects', type_='foreignkey')
    op.drop_column('projects', 'current_baseline_id')
    op.drop_index(op.f('ix_project_variances_id'), table_name='project_variances')
    op.drop_table('project_variances')
    op.drop_index(op.f('ix_baseline_tasks_id'), table_name='baseline_tasks')
    op.drop_table('baseline_tasks')
    op.drop_index(op.f('ix_project_baselines_id'), table_name='project_baselines')
    op.drop_table('project_baselines')
    # ### end Alembic commands ###
